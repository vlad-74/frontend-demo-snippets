let hf = require('help-functions');
console.log('\n' + gl_hr + '\n' +'РЕЗУЛЬТАТ ФАЙЛА : ' + __filename.substring(__filename.indexOf('snippetjs-demo') + 20), '\n' + gl_hr);
// hf.fil.fileToLog('path')
//-------------------------------СОДЕРЖИМОЕ ФАЙЛА--------------------------------------

let str2 = `
Метод bind()
Основное назначение метода bind() состоитв том, чтобы связать (bind) функцию с объектом. 
Если вызвать метод bind() функции f и передать ему объект o, он вернет новую функцию. 
Вызов новой функции (как обычной функции) выполнит вызов оригинальной функции f как метода 
объекта o. Любые аргументы, переданные новой функции, будут переданы оригинальной функции.

bind() выполняет частичное применение: помимо значения this связаны будут все аргументы, 
переданные методу bind() после первого его аргумента. Частичное применение – распространенный 
прием в функциональном программировании и иногда называется каррингом (currying). 
`
console.log(str2);

let str3 = `
function f(y,z=0) { return this.x + y + z }; // функция сложения
var gg = f.bind({x:1}, 2); // Связать this и y
gg(3) // => 6: this.x - связан с 1, y - связан с 2, а 3 передается в z
`
console.log(str3);

function ff(y,z=0) { return this.x + y + z };
var gg = ff.bind({x:1}, 2); 
console.log('gg() = ', gg(), 'Т.К. z=0 ЗАДАН ПО ДЕФОЛТУ ff(y,z=0)');
console.log('gg(0) = ', gg(0));
console.log('gg(3) = ', gg(3));